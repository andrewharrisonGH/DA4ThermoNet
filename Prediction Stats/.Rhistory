# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i45TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i40TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i36TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i30TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i24TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_fwd_ddg.txt"
pred_file <- "./S669/S669_i20TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
# RMSD and PCC ------------------------------------------|
target_file <-"./S669/s669_tensors_rev_ddg.txt"
pred_file <- "./S669/S669r_i20TN_predictions_"
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target <- scan(target_file, what = numeric())
# Collect predictions from 10 files into a matrix
pred_list <- lapply(1:10, function(i) scan(paste0(pred_file, i, ".txt"), what = numeric()))
pred_matrix <- do.call(cbind, pred_list)
#single file
#avg_pred <- scan("./S669/S669_ThermoNet_predictions_10.txt", what = numeric())
# Average predictions across files
avg_pred <- rowMeans(pred_matrix)
avg_pred <- -avg_pred
# Compute RMSD
rmsd_val <- rmsd(avg_pred, target)
# Compute Pearson correlation
cor_val <- cor(target, avg_pred, method = "pearson")
# Compute MAE
n <- length(target)
mae_val <- mae_manual <- sum(abs(target - avg_pred)) / n
# Print results
cat("RMSD:", rmsd_val, "\n")
cat("Pearson correlation:", cor_val, "\n")
cat("Mean Absolute Error:", mae_val, "\n")
fwd_file <- "./S669/S669_i20TN_predictions_"
rev_file <- "./S669/S669r_i20TN_predictions_"
# Collect predictions from 10 files into a matrix
fwd_list <- lapply(1:10, function(i) scan(paste0(fwd_file, i, ".txt"), what = numeric()))
fwd_matrix <- do.call(cbind, fwd_list)
rev_list <- lapply(1:10, function(i) scan(paste0(rev_file, i, ".txt"), what = numeric()))
rev_matrix <- do.call(cbind, rev_list)
# Average predictions across files
avg_fwd_pred <- rowMeans(fwd_matrix)
avg_rev_pred <- rowMeans(rev_matrix)
delta_pred <- avg_fwd_pred + avg_rev_pred
cor(avg_fwd_pred, avg_rev_pred)
mean(delta_pred)
# Read target values
target_file <-"./S669/s669_tensors_fwd_ddg.txt"
# Make Boxplots for 10 Runs of 0 and i72 Augmentation ---------------|
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i72 <- get_rmsds("i72")
all_results <- rbind(results_0, results_i180, results_i120, results_i72)
# --- Boxplot ---
boxplot(rmsd ~ label, data = all_results,
main = "RMSD by Run",
xlab = "Run",
ylab = "RMSD")
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120","i72"))
# --- Boxplot ---
boxplot(rmsd ~ label, data = all_results,
main = "RMSD by Run",
xlab = "Run",
ylab = "RMSD")
# Read target values
target_file <-"./S669/s669_tensors_rev_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669r_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i72 <- get_rmsds("i72")
all_results <- rbind(results_0, results_i180, results_i120, results_i72)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120","i72"))
# --- Boxplot ---
boxplot(rmsd ~ label, data = all_results,
main = "RMSD by Run",
xlab = "Run",
ylab = "RMSD")
sqrt(mean((pred - target)^2))
# Make Boxplots for 10 Runs of 0 and i72 Augmentation ---------------|
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target_file <-"./S669/s669_tensors_rev_ddg.txt"
target <- scan(target_file, what = numeric())
# Read target values
target_file <-"./S669/s669_tensors_fwd_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
# --- Boxplot ---
boxplot(rmsd ~ label, data = all_results,
main = "RMSD by Run",
xlab = "Run",
ylab = "RMSD")
# Read target values
target_file <-"./S669/s669_tensors_rev_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669r_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
# --- Boxplot ---
boxplot(rmsd ~ label, data = all_results,
main = "RMSD by Run",
xlab = "Run",
ylab = "RMSD")
library(ggplot2)
sqrt(mean((pred - target)^2))
# Make Boxplots for 10 Runs of 0 and i72 Augmentation ---------------|
# Function to compute RMSD
rmsd <- function(pred, target) {
sqrt(mean((pred - target)^2))
}
# Read target values
target_file <-"./S669/s669_tensors_fwd_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
ggplot(all_results, aes(x = label, y = rmsd, fill = label)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, shape = 21, size = 2, stroke = 0.4, color = "black", fill = "white") +
scale_fill_manual(values = c("0"="#4E79A7","i180"="#59A14F","i120"="#F28E2B",
"i90"="#E15759","i72"="#76B7B2","i60"="#EDC948")) +
labs(x = "Run", y = "RMSD") +
theme_minimal(base_size = 14) +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
# Read target values
target_file <-"./S669/s669_tensors_rev_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669r_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
ggplot(all_results, aes(x = label, y = rmsd, fill = label)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, shape = 21, size = 2, stroke = 0.4, color = "black", fill = "white") +
scale_fill_manual(values = c("0"="#4E79A7","i180"="#59A14F","i120"="#F28E2B",
"i90"="#E15759","i72"="#76B7B2","i60"="#EDC948")) +
labs(x = "Run", y = "RMSD") +
theme_minimal(base_size = 14) +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
# Read target values
target_file <-"./S669/s669_tensors_fwd_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
ggplot(all_results, aes(x = label, y = rmsd, fill = label)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, shape = 21, size = 2, stroke = 0.4, color = "black", fill = "white") +
scale_fill_manual(values = c("0"="#4E79A7","i180"="#59A14F","i120"="#F28E2B",
"i90"="#E15759","i72"="#76B7B2","i60"="#EDC948")) +
labs(x = "Run", y = "RMSD") +
coord_cartesian(ylim = c(1.49, 1.59)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
# Read target values
target_file <-"./S669/s669_tensors_rev_ddg.txt"
target <- scan(target_file, what = numeric())
# --- Function to collect RMSDs for one run ---
get_rmsds <- function(label) {
sapply(1:10, function(e) {
pred_list <- lapply(1:10, function(i) {
scan(paste0("./S669/S669r_", e, "_", label, "TN_predictions_", i, ".txt"), what = numeric())
})
pred_matrix <- do.call(cbind, pred_list)
avg_pred <- -rowMeans(pred_matrix)
rmsd(avg_pred, target)
}) -> vals
# return as data frame with label
data.frame(label = label, rmsd = vals)
}
# --- Collect for both runs ---
results_0   <- get_rmsds("0")
results_i180 <- get_rmsds("i180")
results_i120 <- get_rmsds("i120")
results_i90 <- get_rmsds("i90")
results_i72 <- get_rmsds("i72")
results_i60 <- get_rmsds("i60")
all_results <- rbind(results_0, results_i180, results_i120, results_i90,
results_i72, results_i60)
all_results$label <- factor(all_results$label, level=c("0", "i180", "i120",
"i90", "i72", "i60"))
ggplot(all_results, aes(x = label, y = rmsd, fill = label)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, shape = 21, size = 2, stroke = 0.4, color = "black", fill = "white") +
scale_fill_manual(values = c("0"="#4E79A7","i180"="#59A14F","i120"="#F28E2B",
"i90"="#E15759","i72"="#76B7B2","i60"="#EDC948")) +
labs(x = "Run", y = "RMSD") +
coord_cartesian(ylim = c(1.49, 1.59)) +
theme_minimal(base_size = 14) +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
